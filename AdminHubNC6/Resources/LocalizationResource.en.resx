<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ABOUT" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="BACK TO HOME" xml:space="preserve">
    <value>Back to home</value>
  </data>
  <data name="BACK TO LIST" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="BALANCE" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="BAR_CODE_SHORT_INVENTORY_NO" xml:space="preserve">
    <value>Barcode / &lt;br&gt; Short Inventory No.</value>
  </data>
  <data name="CALENDAR" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="CALE_BUTTON_CLOSE" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CALE_BUTTON_CREATE_EVENT" xml:space="preserve">
    <value>Create Event</value>
  </data>
  <data name="CALE_BUTTON_DAY" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="CALE_BUTTON_EDIT" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="CALE_BUTTON_MONTH" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="CALE_BUTTON_REMOVE" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="CALE_BUTTON_SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CALE_BUTTON_TODAY" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="CALE_BUTTON_WEEK" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="CALE_LABEL_EDIT_EVENT" xml:space="preserve">
    <value>Edit event</value>
  </data>
  <data name="CALE_LABEL_END_DATE" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="CALE_LABEL_FULL_DAY_EVENT" xml:space="preserve">
    <value>Is Full day event</value>
  </data>
  <data name="CALE_LABEL_START_DATE" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="CALE_LABEL_SUBJECT" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="CALE_LABEL_THEME_COLOR" xml:space="preserve">
    <value>Theme color</value>
  </data>
  <data name="CALE_MSG_DEL_FAIL" xml:space="preserve">
    <value>Event delete failure</value>
  </data>
  <data name="CALE_MSG_END_DATE_REQUIRE" xml:space="preserve">
    <value>End date required</value>
  </data>
  <data name="CALE_MSG_INV_END_DATE" xml:space="preserve">
    <value>Invalid end date</value>
  </data>
  <data name="CALE_MSG_SAVE_FAIL" xml:space="preserve">
    <value>Event save failure</value>
  </data>
  <data name="CALE_MSG_START_DATE_REQUIRE" xml:space="preserve">
    <value>Start date required</value>
  </data>
  <data name="CALE_MSG_SUBJECT_REQUIRE" xml:space="preserve">
    <value>Subject required</value>
  </data>
  <data name="CHANGE PASSWORD" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="COM_CODE_REF_NO" xml:space="preserve">
    <value>Commodity Code or &lt;br&gt; Reference Number</value>
  </data>
  <data name="CONFIRM DELETE MSG" xml:space="preserve">
    <value>Are you sure you want to delete this</value>
  </data>
  <data name="CONTACT" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CREATE" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CREATE A NEW USER" xml:space="preserve">
    <value>Create a new user</value>
  </data>
  <data name="CREATE INVENTORY RECORD" xml:space="preserve">
    <value>Create Inventory Record</value>
  </data>
  <data name="CREATE NEW ROLE" xml:space="preserve">
    <value>Create a new role</value>
  </data>
  <data name="CREATE PC INFO" xml:space="preserve">
    <value>Create PC Info</value>
  </data>
  <data name="CREATE RECORD" xml:space="preserve">
    <value>Create New Record</value>
  </data>
  <data name="DEFAULT" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DELETE" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DELETE PC INFO" xml:space="preserve">
    <value>Delete PC Info</value>
  </data>
  <data name="DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DETAILS" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DHCP" xml:space="preserve">
    <value>DHCP</value>
  </data>
  <data name="EDIT" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EDIT PC INFO" xml:space="preserve">
    <value>Edit PC Info</value>
  </data>
  <data name="EDIT PROFILE" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="GF219" xml:space="preserve">
    <value>GF219</value>
  </data>
  <data name="GF277" xml:space="preserve">
    <value>GF277</value>
  </data>
  <data name="HELLO" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="HOME" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="INVENTORY" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="INVENTORY NO" xml:space="preserve">
    <value>Inventory No.</value>
  </data>
  <data name="INVENTORYNO" xml:space="preserve">
    <value>Inventory No</value>
  </data>
  <data name="IP ADDRESS" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="IPADDRESS" xml:space="preserve">
    <value>Ip Address</value>
  </data>
  <data name="IT EQUIPMENT" xml:space="preserve">
    <value>IT Equipment</value>
  </data>
  <data name="ITEM" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LANGUAGE" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LINE_NO" xml:space="preserve">
    <value>Line No.</value>
  </data>
  <data name="LOCATION" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LOGIN" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LOGOUT" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MANAGE EMAIL" xml:space="preserve">
    <value>Manage Email</value>
  </data>
  <data name="MODEL NO" xml:space="preserve">
    <value>Model No.</value>
  </data>
  <data name="MODELNO" xml:space="preserve">
    <value>Model No</value>
  </data>
  <data name="MODIFIED BY" xml:space="preserve">
    <value>Modified By</value>
  </data>
  <data name="MODIFIED DATE" xml:space="preserve">
    <value>Modified Date</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PC INFO" xml:space="preserve">
    <value>PC Info</value>
  </data>
  <data name="PC INFO DETAILS" xml:space="preserve">
    <value>PC Info Details</value>
  </data>
  <data name="PC NAME" xml:space="preserve">
    <value>PC Name</value>
  </data>
  <data name="PCARD" xml:space="preserve">
    <value>P Card</value>
  </data>
  <data name="PCNAME" xml:space="preserve">
    <value>PC Name</value>
  </data>
  <data name="QUANTITY" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="RECORDS" xml:space="preserve">
    <value>Records</value>
  </data>
  <data name="REGISTER" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="REMARK1" xml:space="preserve">
    <value>Remark 1</value>
  </data>
  <data name="REMARK2" xml:space="preserve">
    <value>Remark 2</value>
  </data>
  <data name="REMARKS" xml:space="preserve">
    <value>Remark's</value>
  </data>
  <data name="ROLE" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="ROLE LIST" xml:space="preserve">
    <value>Role list</value>
  </data>
  <data name="SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SERIAL NO" xml:space="preserve">
    <value>Serial No.</value>
  </data>
  <data name="SERIALNO" xml:space="preserve">
    <value>Serial No</value>
  </data>
  <data name="SOAVENDOR" xml:space="preserve">
    <value>SOA Vendor</value>
  </data>
  <data name="STATUS" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SYSTEM" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="UNIT_OF_QTY" xml:space="preserve">
    <value>Unit of Quantity</value>
  </data>
  <data name="UNIT_REF_NO" xml:space="preserve">
    <value>Unit ref. No.</value>
  </data>
  <data name="UPDATEDBY" xml:space="preserve">
    <value>Update By</value>
  </data>
  <data name="UPDATEDDATE" xml:space="preserve">
    <value>Update Date</value>
  </data>
  <data name="USER" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="USER ADMIN" xml:space="preserve">
    <value>User Admin</value>
  </data>
  <data name="USER LIST" xml:space="preserve">
    <value>User list</value>
  </data>
  <data name="USER NAME" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="USER POST" xml:space="preserve">
    <value>User Post</value>
  </data>
  <data name="USERNAME" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="USERPOST" xml:space="preserve">
    <value>User Post</value>
  </data>
  <data name="VENDOR" xml:space="preserve">
    <value>Vendor</value>
  </data>
  <data name="VOUCHER_BALANCE_1" xml:space="preserve">
    <value>Voucher Balance 1</value>
  </data>
  <data name="VOUCHER_BALANCE_2" xml:space="preserve">
    <value>Voucher Balance 2</value>
  </data>
  <data name="VOUCHER_NO_1" xml:space="preserve">
    <value>Voucher 1</value>
  </data>
  <data name="VOUCHER_NO_2" xml:space="preserve">
    <value>Voucher 2</value>
  </data>
  <data name="VOUCHER_QTY_1" xml:space="preserve">
    <value>Voucher QTY 1</value>
  </data>
  <data name="VOUCHER_QTY_2" xml:space="preserve">
    <value>Voucher QTY 2</value>
  </data>
  <data name="WARRANTYEXPIRYDATE" xml:space="preserve">
    <value>Warranty Expiry Date</value>
  </data>
  <data name="WELCOME" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="YES" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>